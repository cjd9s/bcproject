{
  "contractName": "ERC721Mintable",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC721 minting logic.\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted token.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeMint(address,uint256)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted token.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"safeMint(address,uint256,bytes)\":{\"details\":\"Function to safely mint tokens.\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check.\",\"to\":\"The address that will receive the minted token.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}},\"title\":\"ERC721Mintable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Mintable.sol\":\"ERC721Mintable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xdf50b7ae128ae6234bf297a03a7622b3d146734479b26b749052e61ee9dae650\",\"urls\":[\"bzz-raw://93218d23526253d8e8634e5f5be8c21e3c46f12992eae378b202ca22d48564a0\",\"dweb:/ipfs/QmfG4XhTbsxnzCGXgsvxWmuJtU8snNaMEpW9drGde2yY6S\"]},\"@openzeppelin/contracts-ethereum-package/contracts/drafts/Counters.sol\":{\"keccak256\":\"0xf1267d23aae72ba9bef7bbef542a658645e1e2a125d107978a0907f6693d43a1\",\"urls\":[\"bzz-raw://35227fc5f4ed2b123ba30d04b8887b7b8e0c492e3947663c08b2bc310e4da17e\",\"dweb:/ipfs/QmYGavckDLSHAtxSXpGgCWzAdAFdeMDDALJdeJawyqP1Ha\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x77dba70b279e47f7f6941b433a26ba51b8484b557d250d3a78075ecea5a9b01d\",\"urls\":[\"bzz-raw://946383a175d8b051ab44a6a6001b09ad09403aae6af0280d9532f1fde557ba7f\",\"dweb:/ipfs/QmeTQrn4DJWnZyf7v3FRGfP7CLzESNNtFAsDDhakWH2zfp\"]},\"@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xcc02740f27fa64fcd3237e531390e7091c0d1a597c1e3c315412e6edfcb56e98\",\"urls\":[\"bzz-raw://435140748ea8a6aef64fb8be8e92547bc73b55715487959f8a38cae981c3be5b\",\"dweb:/ipfs/QmWzaYxa7Bvpb8AifSw3Au6hB2VdevwL66xyzr6objJoqs\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Mintable.sol\":{\"keccak256\":\"0x907766c86fad66a29fb7a3c8828f484b19c05cac392d924ff9125ddda86f7192\",\"urls\":[\"bzz-raw://71e1c3f4f08d2453d4efd60df31aca2d92395de8132af5cf7933ae0f53224fee\",\"dweb:/ipfs/QmXw3z7VeSMcttKeH5uC5CZ9as45AufWJS4kYyPWkojGzV\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x3481053b3fbcb2cc24d40f208f1d65a1381febbed382eaba0f6ef7ce2296dac0\",\"urls\":[\"bzz-raw://9a44cef44872a5051402b8a3e00c18c4b36f75c8394c11b71e78abdb81ffe8ca\",\"dweb:/ipfs/QmYnuiJaRrBpPbC2YnQbK8MwDVtY68dpY18ir1GZeBZrh5\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzz-raw://9404711f3206610c08ea97fa52c7b6b4d2e9d536e96fc4b7210aa7e24f796c36\",\"dweb:/ipfs/QmZDzpVzjoap13SuPEq5pVCrmdjoKVZnTsQPLKXAbynTTW\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzz-raw://6af1a35ad6aed2169ce9f44095438b3192cd6066903908f769d5c49a06a0caf8\",\"dweb:/ipfs/QmaH41CwJ7WrMQwSnbfCKuL2pd8bxF7sbGSLPZb6JaHBFF\"]}},\"version\":1}",
  "bytecode": "0x6080604052611a33806100136000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638832e6e3116100b2578063a22cb46511610081578063b88d4fde11610066578063b88d4fde1461043b578063c4d66de814610501578063e985e9c51461052757610136565b8063a22cb465146103e7578063aa271e1a1461041557610136565b80638832e6e3146102d2578063983b2d561461038d57806398650275146103b3578063a1448194146103bb57610136565b806340c10f19116101095780636352211e116100ee5780636352211e1461027557806370a08231146102925780638129fc1c146102ca57610136565b806340c10f191461021357806342842e0e1461023f57610136565b806301ffc9a71461013b578063081812fc14610176578063095ea7b3146101af57806323b872dd146101dd575b600080fd5b6101626004803603602081101561015157600080fd5b50356001600160e01b031916610555565b604080519115158252519081900360200190f35b6101936004803603602081101561018c57600080fd5b5035610574565b604080516001600160a01b039092168252519081900360200190f35b6101db600480360360408110156101c557600080fd5b506001600160a01b0381351690602001356105d6565b005b6101db600480360360608110156101f357600080fd5b506001600160a01b0381358116916020810135909116906040013561070b565b6101626004803603604081101561022957600080fd5b506001600160a01b038135169060200135610767565b6101db6004803603606081101561025557600080fd5b506001600160a01b038135811691602081013590911690604001356107c7565b6101936004803603602081101561028b57600080fd5b50356107e2565b6102b8600480360360208110156102a857600080fd5b50356001600160a01b031661083c565b60408051918252519081900360200190f35b6101db6108a4565b610162600480360360608110156102e857600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561031857600080fd5b82018360208201111561032a57600080fd5b8035906020019184600183028401116401000000008311171561034c57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061095e945050505050565b6101db600480360360208110156103a357600080fd5b50356001600160a01b03166109bb565b6101db610a0a565b610162600480360360408110156103d157600080fd5b506001600160a01b038135169060200135610a1c565b6101db600480360360408110156103fd57600080fd5b506001600160a01b0381351690602001351515610a6e565b6101626004803603602081101561042b57600080fd5b50356001600160a01b0316610b73565b6101db6004803603608081101561045157600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561048c57600080fd5b82018360208201111561049e57600080fd5b803590602001918460018302840111640100000000831117156104c057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b86945050505050565b6101db6004803603602081101561051757600080fd5b50356001600160a01b0316610be4565b6101626004803603604081101561053d57600080fd5b506001600160a01b0381358116916020013516610ca1565b6001600160e01b03191660009081526033602052604090205460ff1690565b600061057f82610ccf565b6105ba5760405162461bcd60e51b815260040180806020018281038252602c815260200180611908602c913960400191505060405180910390fd5b506000908152606760205260409020546001600160a01b031690565b60006105e1826107e2565b9050806001600160a01b0316836001600160a01b031614156106345760405162461bcd60e51b81526004018080602001828103825260218152602001806119ad6021913960400191505060405180910390fd5b806001600160a01b0316610646610cec565b6001600160a01b03161480610667575061066781610662610cec565b610ca1565b6106a25760405162461bcd60e51b815260040180806020018281038252603881526020018061182c6038913960400191505060405180910390fd5b600082815260676020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b61071c610716610cec565b82610cf0565b6107575760405162461bcd60e51b81526004018080602001828103825260318152602001806119ce6031913960400191505060405180910390fd5b610762838383610d94565b505050565b6000610779610774610cec565b610b73565b6107b45760405162461bcd60e51b81526004018080602001828103825260308152602001806118b76030913960400191505060405180910390fd5b6107be8383610ee5565b50600192915050565b61076283838360405180602001604052806000815250610b86565b6000818152606660205260408120546001600160a01b0316806108365760405162461bcd60e51b815260040180806020018281038252602981526020018061188e6029913960400191505060405180910390fd5b92915050565b60006001600160a01b0382166108835760405162461bcd60e51b815260040180806020018281038252602a815260200180611864602a913960400191505060405180910390fd5b6001600160a01b038216600090815260686020526040902061083690611023565b600054610100900460ff16806108bd57506108bd611027565b806108cb575060005460ff16155b6109065760405162461bcd60e51b815260040180806020018281038252602e815260200180611956602e913960400191505060405180910390fd5b600054610100900460ff16158015610931576000805460ff1961ff0019909116610100171660011790555b61093961102d565b6109496380ac58cd60e01b6110df565b801561095b576000805461ff00191690555b50565b600061096b610774610cec565b6109a65760405162461bcd60e51b81526004018080602001828103825260308152602001806118b76030913960400191505060405180910390fd5b6109b1848484611163565b5060019392505050565b6109c6610774610cec565b610a015760405162461bcd60e51b81526004018080602001828103825260308152602001806118b76030913960400191505060405180910390fd5b61095b816111b5565b610a1a610a15610cec565b6111fd565b565b6000610a29610774610cec565b610a645760405162461bcd60e51b81526004018080602001828103825260308152602001806118b76030913960400191505060405180910390fd5b6107be8383611245565b610a76610cec565b6001600160a01b0316826001600160a01b03161415610adc576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060696000610ae9610cec565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610b2d610cec565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b6000610836609c8363ffffffff61125f16565b610b97610b91610cec565b83610cf0565b610bd25760405162461bcd60e51b81526004018080602001828103825260318152602001806119ce6031913960400191505060405180910390fd5b610bde848484846112c6565b50505050565b600054610100900460ff1680610bfd5750610bfd611027565b80610c0b575060005460ff16155b610c465760405162461bcd60e51b815260040180806020018281038252602e815260200180611956602e913960400191505060405180910390fd5b600054610100900460ff16158015610c71576000805460ff1961ff0019909116610100171660011790555b610c79611318565b610c8257600080fd5b610c8b8261132f565b8015610c9d576000805461ff00191690555b5050565b6001600160a01b03918216600090815260696020908152604080832093909416825291909152205460ff1690565b6000908152606660205260409020546001600160a01b0316151590565b3390565b6000610cfb82610ccf565b610d365760405162461bcd60e51b815260040180806020018281038252602c815260200180611800602c913960400191505060405180910390fd5b6000610d41836107e2565b9050806001600160a01b0316846001600160a01b03161480610d7c5750836001600160a01b0316610d7184610574565b6001600160a01b0316145b80610d8c5750610d8c8185610ca1565b949350505050565b826001600160a01b0316610da7826107e2565b6001600160a01b031614610dec5760405162461bcd60e51b81526004018080602001828103825260298152602001806119846029913960400191505060405180910390fd5b6001600160a01b038216610e315760405162461bcd60e51b81526004018080602001828103825260248152602001806117dc6024913960400191505060405180910390fd5b610e3a816113d2565b6001600160a01b0383166000908152606860205260409020610e5b9061141a565b6001600160a01b0382166000908152606860205260409020610e7c90611431565b600081815260666020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610f40576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b610f4981610ccf565b15610f9b576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b6000818152606660209081526040808320805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038716908117909155835260689091529020610fe790611431565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b5490565b303b1590565b600054610100900460ff16806110465750611046611027565b80611054575060005460ff16155b61108f5760405162461bcd60e51b815260040180806020018281038252602e815260200180611956602e913960400191505060405180910390fd5b600054610100900460ff161580156110ba576000805460ff1961ff0019909116610100171660011790555b6109497f01ffc9a7000000000000000000000000000000000000000000000000000000005b6001600160e01b0319808216141561113e576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152603360205260409020805460ff19166001179055565b61116d8383610ee5565b61117a600084848461143a565b6107625760405162461bcd60e51b81526004018080602001828103825260328152602001806117aa6032913960400191505060405180910390fd5b6111c6609c8263ffffffff6115aa16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61120e609c8263ffffffff61162b16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b610c9d828260405180602001604052806000815250611163565b60006001600160a01b0382166112a65760405162461bcd60e51b81526004018080602001828103825260228152602001806119346022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6112d1848484610d94565b6112dd8484848461143a565b610bde5760405162461bcd60e51b81526004018080602001828103825260328152602001806117aa6032913960400191505060405180910390fd5b600061132a6380ac58cd60e01b610555565b905090565b600054610100900460ff16806113485750611348611027565b80611356575060005460ff16155b6113915760405162461bcd60e51b815260040180806020018281038252602e815260200180611956602e913960400191505060405180910390fd5b600054610100900460ff161580156113bc576000805460ff1961ff0019909116610100171660011790555b6113c582610b73565b610c8b57610c8b826111b5565b6000818152606760205260409020546001600160a01b03161561095b576000908152606760205260409020805473ffffffffffffffffffffffffffffffffffffffff19169055565b805461142d90600163ffffffff61169216565b9055565b80546001019055565b600061144e846001600160a01b03166116db565b61145a57506001610d8c565b6000846001600160a01b031663150b7a02611473610cec565b8887876040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156114f85781810151838201526020016114e0565b50505050905090810190601f1680156115255780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561154757600080fd5b505af115801561155b573d6000803e3d6000fd5b505050506040513d602081101561157157600080fd5b50516001600160e01b0319167f150b7a020000000000000000000000000000000000000000000000000000000014915050949350505050565b6115b4828261125f565b15611606576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b611635828261125f565b6116705760405162461bcd60e51b81526004018080602001828103825260218152602001806118e76021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006116d483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611712565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590610d8c5750141592915050565b600081848411156117a15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561176657818101518382015260200161174e565b50505050905090810190601f1680156117935780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a265627a7a723158206870f3de4e350c224a0b8dbf24a5847bf70cd0c8634e90b8dbf994ac0c89387364736f6c634300050b0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c80638832e6e3116100b2578063a22cb46511610081578063b88d4fde11610066578063b88d4fde1461043b578063c4d66de814610501578063e985e9c51461052757610136565b8063a22cb465146103e7578063aa271e1a1461041557610136565b80638832e6e3146102d2578063983b2d561461038d57806398650275146103b3578063a1448194146103bb57610136565b806340c10f19116101095780636352211e116100ee5780636352211e1461027557806370a08231146102925780638129fc1c146102ca57610136565b806340c10f191461021357806342842e0e1461023f57610136565b806301ffc9a71461013b578063081812fc14610176578063095ea7b3146101af57806323b872dd146101dd575b600080fd5b6101626004803603602081101561015157600080fd5b50356001600160e01b031916610555565b604080519115158252519081900360200190f35b6101936004803603602081101561018c57600080fd5b5035610574565b604080516001600160a01b039092168252519081900360200190f35b6101db600480360360408110156101c557600080fd5b506001600160a01b0381351690602001356105d6565b005b6101db600480360360608110156101f357600080fd5b506001600160a01b0381358116916020810135909116906040013561070b565b6101626004803603604081101561022957600080fd5b506001600160a01b038135169060200135610767565b6101db6004803603606081101561025557600080fd5b506001600160a01b038135811691602081013590911690604001356107c7565b6101936004803603602081101561028b57600080fd5b50356107e2565b6102b8600480360360208110156102a857600080fd5b50356001600160a01b031661083c565b60408051918252519081900360200190f35b6101db6108a4565b610162600480360360608110156102e857600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561031857600080fd5b82018360208201111561032a57600080fd5b8035906020019184600183028401116401000000008311171561034c57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061095e945050505050565b6101db600480360360208110156103a357600080fd5b50356001600160a01b03166109bb565b6101db610a0a565b610162600480360360408110156103d157600080fd5b506001600160a01b038135169060200135610a1c565b6101db600480360360408110156103fd57600080fd5b506001600160a01b0381351690602001351515610a6e565b6101626004803603602081101561042b57600080fd5b50356001600160a01b0316610b73565b6101db6004803603608081101561045157600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561048c57600080fd5b82018360208201111561049e57600080fd5b803590602001918460018302840111640100000000831117156104c057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b86945050505050565b6101db6004803603602081101561051757600080fd5b50356001600160a01b0316610be4565b6101626004803603604081101561053d57600080fd5b506001600160a01b0381358116916020013516610ca1565b6001600160e01b03191660009081526033602052604090205460ff1690565b600061057f82610ccf565b6105ba5760405162461bcd60e51b815260040180806020018281038252602c815260200180611908602c913960400191505060405180910390fd5b506000908152606760205260409020546001600160a01b031690565b60006105e1826107e2565b9050806001600160a01b0316836001600160a01b031614156106345760405162461bcd60e51b81526004018080602001828103825260218152602001806119ad6021913960400191505060405180910390fd5b806001600160a01b0316610646610cec565b6001600160a01b03161480610667575061066781610662610cec565b610ca1565b6106a25760405162461bcd60e51b815260040180806020018281038252603881526020018061182c6038913960400191505060405180910390fd5b600082815260676020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b61071c610716610cec565b82610cf0565b6107575760405162461bcd60e51b81526004018080602001828103825260318152602001806119ce6031913960400191505060405180910390fd5b610762838383610d94565b505050565b6000610779610774610cec565b610b73565b6107b45760405162461bcd60e51b81526004018080602001828103825260308152602001806118b76030913960400191505060405180910390fd5b6107be8383610ee5565b50600192915050565b61076283838360405180602001604052806000815250610b86565b6000818152606660205260408120546001600160a01b0316806108365760405162461bcd60e51b815260040180806020018281038252602981526020018061188e6029913960400191505060405180910390fd5b92915050565b60006001600160a01b0382166108835760405162461bcd60e51b815260040180806020018281038252602a815260200180611864602a913960400191505060405180910390fd5b6001600160a01b038216600090815260686020526040902061083690611023565b600054610100900460ff16806108bd57506108bd611027565b806108cb575060005460ff16155b6109065760405162461bcd60e51b815260040180806020018281038252602e815260200180611956602e913960400191505060405180910390fd5b600054610100900460ff16158015610931576000805460ff1961ff0019909116610100171660011790555b61093961102d565b6109496380ac58cd60e01b6110df565b801561095b576000805461ff00191690555b50565b600061096b610774610cec565b6109a65760405162461bcd60e51b81526004018080602001828103825260308152602001806118b76030913960400191505060405180910390fd5b6109b1848484611163565b5060019392505050565b6109c6610774610cec565b610a015760405162461bcd60e51b81526004018080602001828103825260308152602001806118b76030913960400191505060405180910390fd5b61095b816111b5565b610a1a610a15610cec565b6111fd565b565b6000610a29610774610cec565b610a645760405162461bcd60e51b81526004018080602001828103825260308152602001806118b76030913960400191505060405180910390fd5b6107be8383611245565b610a76610cec565b6001600160a01b0316826001600160a01b03161415610adc576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060696000610ae9610cec565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610b2d610cec565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b6000610836609c8363ffffffff61125f16565b610b97610b91610cec565b83610cf0565b610bd25760405162461bcd60e51b81526004018080602001828103825260318152602001806119ce6031913960400191505060405180910390fd5b610bde848484846112c6565b50505050565b600054610100900460ff1680610bfd5750610bfd611027565b80610c0b575060005460ff16155b610c465760405162461bcd60e51b815260040180806020018281038252602e815260200180611956602e913960400191505060405180910390fd5b600054610100900460ff16158015610c71576000805460ff1961ff0019909116610100171660011790555b610c79611318565b610c8257600080fd5b610c8b8261132f565b8015610c9d576000805461ff00191690555b5050565b6001600160a01b03918216600090815260696020908152604080832093909416825291909152205460ff1690565b6000908152606660205260409020546001600160a01b0316151590565b3390565b6000610cfb82610ccf565b610d365760405162461bcd60e51b815260040180806020018281038252602c815260200180611800602c913960400191505060405180910390fd5b6000610d41836107e2565b9050806001600160a01b0316846001600160a01b03161480610d7c5750836001600160a01b0316610d7184610574565b6001600160a01b0316145b80610d8c5750610d8c8185610ca1565b949350505050565b826001600160a01b0316610da7826107e2565b6001600160a01b031614610dec5760405162461bcd60e51b81526004018080602001828103825260298152602001806119846029913960400191505060405180910390fd5b6001600160a01b038216610e315760405162461bcd60e51b81526004018080602001828103825260248152602001806117dc6024913960400191505060405180910390fd5b610e3a816113d2565b6001600160a01b0383166000908152606860205260409020610e5b9061141a565b6001600160a01b0382166000908152606860205260409020610e7c90611431565b600081815260666020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610f40576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b610f4981610ccf565b15610f9b576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b6000818152606660209081526040808320805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038716908117909155835260689091529020610fe790611431565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b5490565b303b1590565b600054610100900460ff16806110465750611046611027565b80611054575060005460ff16155b61108f5760405162461bcd60e51b815260040180806020018281038252602e815260200180611956602e913960400191505060405180910390fd5b600054610100900460ff161580156110ba576000805460ff1961ff0019909116610100171660011790555b6109497f01ffc9a7000000000000000000000000000000000000000000000000000000005b6001600160e01b0319808216141561113e576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152603360205260409020805460ff19166001179055565b61116d8383610ee5565b61117a600084848461143a565b6107625760405162461bcd60e51b81526004018080602001828103825260328152602001806117aa6032913960400191505060405180910390fd5b6111c6609c8263ffffffff6115aa16565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61120e609c8263ffffffff61162b16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b610c9d828260405180602001604052806000815250611163565b60006001600160a01b0382166112a65760405162461bcd60e51b81526004018080602001828103825260228152602001806119346022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6112d1848484610d94565b6112dd8484848461143a565b610bde5760405162461bcd60e51b81526004018080602001828103825260328152602001806117aa6032913960400191505060405180910390fd5b600061132a6380ac58cd60e01b610555565b905090565b600054610100900460ff16806113485750611348611027565b80611356575060005460ff16155b6113915760405162461bcd60e51b815260040180806020018281038252602e815260200180611956602e913960400191505060405180910390fd5b600054610100900460ff161580156113bc576000805460ff1961ff0019909116610100171660011790555b6113c582610b73565b610c8b57610c8b826111b5565b6000818152606760205260409020546001600160a01b03161561095b576000908152606760205260409020805473ffffffffffffffffffffffffffffffffffffffff19169055565b805461142d90600163ffffffff61169216565b9055565b80546001019055565b600061144e846001600160a01b03166116db565b61145a57506001610d8c565b6000846001600160a01b031663150b7a02611473610cec565b8887876040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156114f85781810151838201526020016114e0565b50505050905090810190601f1680156115255780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561154757600080fd5b505af115801561155b573d6000803e3d6000fd5b505050506040513d602081101561157157600080fd5b50516001600160e01b0319167f150b7a020000000000000000000000000000000000000000000000000000000014915050949350505050565b6115b4828261125f565b15611606576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b611635828261125f565b6116705760405162461bcd60e51b81526004018080602001828103825260218152602001806118e76021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006116d483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611712565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590610d8c5750141592915050565b600081848411156117a15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561176657818101518382015260200161174e565b50505050905090810190601f1680156117935780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a265627a7a723158206870f3de4e350c224a0b8dbf24a5847bf70cd0c8634e90b8dbf994ac0c89387364736f6c634300050b0032",
  "sourceMap": "217:1502:14:-;;;;;;;;;",
  "deployedSourceMap": "217:1502:14:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;217:1502:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1008:131:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1008:131:7;-1:-1:-1;;;;;;1008:131:7;;:::i;:::-;;;;;;;;;;;;;;;;;;4538:200:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4538:200:12;;:::i;:::-;;;;-1:-1:-1;;;;;4538:200:12;;;;;;;;;;;;;;3838:415;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3838:415:12;;;;;;;;:::i;:::-;;6184:287;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6184:287:12;;;;;;;;;;;;;;;;;:::i;673:132:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;673:132:14;;;;;;;;:::i;7120::12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7120:132:12;;;;;;;;;;;;;;;;;:::i;3194:223::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3194:223:12;;:::i;2768:207::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2768:207:12;-1:-1:-1;;;;;2768:207:12;;:::i;:::-;;;;;;;;;;;;;;;;2230:205;;;:::i;1514:167:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;1514:167:14;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1514:167:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1514:167:14;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1514:167:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1514:167:14;;-1:-1:-1;1514:167:14;;-1:-1:-1;;;;;1514:167:14:i;756:90:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;756:90:4;-1:-1:-1;;;;;756:90:4;;:::i;852:77::-;;;:::i;1053:140:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1053:140:14;;;;;;;;:::i;5031:249:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5031:249:12;;;;;;;;;;:::i;643:107:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;643:107:4;-1:-1:-1;;;;;643:107:4;;:::i;7975:269:12:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7975:269:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7975:269:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7975:269:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7975:269:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7975:269:12;;-1:-1:-1;7975:269:12;;-1:-1:-1;;;;;7975:269:12:i;284:148:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;284:148:14;-1:-1:-1;;;;;284:148:14;;:::i;5602:145:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5602:145:12;;;;;;;;;;:::i;1008:131:7:-;-1:-1:-1;;;;;;1099:33:7;1076:4;1099:33;;;:20;:33;;;;;;;;;1008:131::o;4538:200:12:-;4597:7;4624:16;4632:7;4624;:16::i;:::-;4616:73;;;;-1:-1:-1;;;4616:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4707:24:12;;;;:15;:24;;;;;;-1:-1:-1;;;;;4707:24:12;;4538:200::o;3838:415::-;3901:13;3917:16;3925:7;3917;:16::i;:::-;3901:32;;3957:5;-1:-1:-1;;;;;3951:11:12;:2;-1:-1:-1;;;;;3951:11:12;;;3943:57;;;;-1:-1:-1;;;3943:57:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4035:5;-1:-1:-1;;;;;4019:21:12;:12;:10;:12::i;:::-;-1:-1:-1;;;;;4019:21:12;;:62;;;;4044:37;4061:5;4068:12;:10;:12::i;:::-;4044:16;:37::i;:::-;4011:152;;;;-1:-1:-1;;;4011:152:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4174:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;4174:29:12;-1:-1:-1;;;;;4174:29:12;;;;;;;;;4218:28;;4174:24;;4218:28;;;;;;;3838:415;;;:::o;6184:287::-;6326:41;6345:12;:10;:12::i;:::-;6359:7;6326:18;:41::i;:::-;6318:103;;;;-1:-1:-1;;;6318:103:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6432:32;6446:4;6452:2;6456:7;6432:13;:32::i;:::-;6184:287;;;:::o;673:132:14:-;743:4;544:22:4;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;-1:-1:-1;;;536:83:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;759:18:14;765:2;769:7;759:5;:18::i;:::-;-1:-1:-1;794:4:14;673:132;;;;:::o;7120::12:-;7206:39;7223:4;7229:2;7233:7;7206:39;;;;;;;;;;;;:16;:39::i;3194:223::-;3249:7;3284:20;;;:11;:20;;;;;;-1:-1:-1;;;;;3284:20:12;3322:19;3314:73;;;;-1:-1:-1;;;3314:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3405:5;3194:223;-1:-1:-1;;3194:223:12:o;2768:207::-;2823:7;-1:-1:-1;;;;;2850:19:12;;2842:74;;;;-1:-1:-1;;;2842:74:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2934:24:12;;;;;;:17;:24;;;;;:34;;:32;:34::i;2230:205::-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;2281:19:12;:17;:19::i;:::-;2388:40;-1:-1:-1;;;2388:18:12;:40::i;:::-;1268:14:20;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:20;;;1264:55;2230:205:12;:::o;1514:167:14:-;1608:4;544:22:4;553:12;:10;:12::i;544:22::-;536:83;;;;-1:-1:-1;;;536:83:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:29:14;1634:2;1638:7;1647:5;1624:9;:29::i;:::-;-1:-1:-1;1670:4:14;1514:167;;;;;:::o;756:90:4:-;544:22;553:12;:10;:12::i;544:22::-;536:83;;;;-1:-1:-1;;;536:83:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:19;831:7;820:10;:19::i;852:77::-;895:27;909:12;:10;:12::i;:::-;895:13;:27::i;:::-;852:77::o;1053:140:14:-;1127:4;544:22:4;553:12;:10;:12::i;544:22::-;536:83;;;;-1:-1:-1;;;536:83:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1143:22:14;1153:2;1157:7;1143:9;:22::i;5031:249:12:-;5116:12;:10;:12::i;:::-;-1:-1:-1;;;;;5110:18:12;:2;-1:-1:-1;;;;;5110:18:12;;;5102:56;;;;;-1:-1:-1;;;5102:56:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;5208:8;5169:18;:32;5188:12;:10;:12::i;:::-;-1:-1:-1;;;;;5169:32:12;;;;;;;;;;;;;;;;;-1:-1:-1;5169:32:12;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;5169:47:12;;;;;;;;;;;5246:12;:10;:12::i;:::-;5231:42;;;;;;;;;;-1:-1:-1;;;;;5231:42:12;;;;;;;;;;;;;;5031:249;;:::o;643:107:4:-;699:4;722:21;:8;735:7;722:21;:12;:21;:::i;7975:269:12:-;8089:41;8108:12;:10;:12::i;:::-;8122:7;8089:18;:41::i;:::-;8081:103;;;;-1:-1:-1;;;8081:103:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8194:43;8212:4;8218:2;8222:7;8231:5;8194:17;:43::i;:::-;7975:269;;;;:::o;284:148:14:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;357:28:14;:26;:28::i;:::-;349:37;;;;;;396:29;418:6;396:21;:29::i;:::-;1268:14:20;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:20;;;1264:55;284:148:14;;:::o;5602:145:12:-;-1:-1:-1;;;;;5705:25:12;;;5682:4;5705:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5602:145::o;9415:152::-;9472:4;9504:20;;;:11;:20;;;;;;-1:-1:-1;;;;;9504:20:12;9541:19;;;9415:152::o;867:96:2:-;946:10;867:96;:::o;9928:329:12:-;10013:4;10037:16;10045:7;10037;:16::i;:::-;10029:73;;;;-1:-1:-1;;;10029:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10112:13;10128:16;10136:7;10128;:16::i;:::-;10112:32;;10173:5;-1:-1:-1;;;;;10162:16:12;:7;-1:-1:-1;;;;;10162:16:12;;:51;;;;10206:7;-1:-1:-1;;;;;10182:31:12;:20;10194:7;10182:11;:20::i;:::-;-1:-1:-1;;;;;10182:31:12;;10162:51;:87;;;;10217:32;10234:5;10241:7;10217:16;:32::i;:::-;10154:96;9928:329;-1:-1:-1;;;;9928:329:12:o;13538:447::-;13651:4;-1:-1:-1;;;;;13631:24:12;:16;13639:7;13631;:16::i;:::-;-1:-1:-1;;;;;13631:24:12;;13623:78;;;;-1:-1:-1;;;13623:78:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13719:16:12;;13711:65;;;;-1:-1:-1;;;13711:65:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13787:23;13802:7;13787:14;:23::i;:::-;-1:-1:-1;;;;;13821:23:12;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;13866:21:12;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;13910:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;13910:25:12;-1:-1:-1;;;;;13910:25:12;;;;;;;;;13951:27;;13910:20;;13951:27;;;;;;;13538:447;;;:::o;11971:327::-;-1:-1:-1;;;;;12042:16:12;;12034:61;;;;;-1:-1:-1;;;12034:61:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12114:16;12122:7;12114;:16::i;:::-;12113:17;12105:58;;;;;-1:-1:-1;;;12105:58:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;12174:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;12174:25:12;-1:-1:-1;;;;;12174:25:12;;;;;;;;12209:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;12258;;12283:7;;-1:-1:-1;;;;;12258:33:12;;;12275:1;;12258:33;;12275:1;;12258:33;11971:327;;:::o;1065:112:6:-;1156:14;;1065:112::o;1409:467:20:-;1842:7;1830:20;1864:7;1409:467;:::o;624:234:7:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;811:40:7;830:20;1533:190;-1:-1:-1;;;;;;1608:25:7;;;;;1600:66;;;;;-1:-1:-1;;;1600:66:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1676:33:7;;;;;:20;:33;;;;;:40;;-1:-1:-1;;1676:40:7;1712:4;1676:40;;;1533:190::o;11487:239:12:-;11574:18;11580:2;11584:7;11574:5;:18::i;:::-;11610:54;11641:1;11645:2;11649:7;11658:5;11610:22;:54::i;:::-;11602:117;;;;-1:-1:-1;;;11602:117:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;935:119:4;991:21;:8;1004:7;991:21;:12;:21;:::i;:::-;1027:20;;-1:-1:-1;;;;;1027:20:4;;;;;;;;935:119;:::o;1060:127::-;1119:24;:8;1135:7;1119:24;:15;:24;:::i;:::-;1158:22;;-1:-1:-1;;;;;1158:22:4;;;;;;;;1060:127;:::o;10786:100:12:-;10853:26;10863:2;10867:7;10853:26;;;;;;;;;;;;:9;:26::i;779:200:3:-;851:4;-1:-1:-1;;;;;875:21:3;;867:68;;;;-1:-1:-1;;;867:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:3;:11;:20;;;;;;;;;;;;;;;779:200::o;8951:269:12:-;9060:32;9074:4;9080:2;9084:7;9060:13;:32::i;:::-;9110:48;9133:4;9139:2;9143:7;9152:5;9110:22;:48::i;:::-;9102:111;;;;-1:-1:-1;;;9102:111:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2441:123;2495:4;2518:39;-1:-1:-1;;;2518:17:12;:39::i;:::-;2511:46;;2441:123;:::o;361:137:4:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;431:16:4;440:6;431:8;:16::i;:::-;426:66;;463:18;474:6;463:10;:18::i;15085:171:12:-;15184:1;15148:24;;;:15;:24;;;;;;-1:-1:-1;;;;;15148:24:12;:38;15144:106;;15237:1;15202:24;;;:15;:24;;;;;:37;;-1:-1:-1;;15202:37:12;;;15085:171::o;1278:108:6:-;1358:14;;:21;;1377:1;1358:21;:18;:21;:::i;:::-;1341:38;;1278:108::o;1183:89::-;1246:19;;1264:1;1246:19;;;1183:89::o;14574:349:12:-;14695:4;14720:15;:2;-1:-1:-1;;;;;14720:13:12;;:15::i;:::-;14715:58;;-1:-1:-1;14758:4:12;14751:11;;14715:58;14783:13;14815:2;-1:-1:-1;;;;;14799:36:12;;14836:12;:10;:12::i;:::-;14850:4;14856:7;14865:5;14799:72;;;;;;;;;;;;;-1:-1:-1;;;;;14799:72:12;-1:-1:-1;;;;;14799:72:12;;;;;;-1:-1:-1;;;;;14799:72:12;-1:-1:-1;;;;;14799:72:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14799:72:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14799:72:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14799:72:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14799:72:12;-1:-1:-1;;;;;;14889:26:12;14899:16;14889:26;;-1:-1:-1;;14574:349:12;;;;;;:::o;260:175:3:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:3;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:3;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:3;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:3;;;510:180::o;1274:134:10:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:10:o;557:797:18:-;617:4;1265:20;;1110:66;1304:15;;;;;:42;;-1:-1:-1;1323:23:18;;;1296:51;-1:-1:-1;;557:797:18:o;1732:187:10:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:10;;;1732:187::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport \"./ERC721.sol\";\nimport \"../../access/roles/MinterRole.sol\";\n\n/**\n * @title ERC721Mintable\n * @dev ERC721 minting logic.\n */\ncontract ERC721Mintable is Initializable, ERC721, MinterRole {\n    function initialize(address sender) public initializer {\n        require(ERC721._hasBeenInitialized());\n        MinterRole.initialize(sender);\n    }\n\n    /**\n     * @dev Function to mint tokens.\n     * @param to The address that will receive the minted token.\n     * @param tokenId The token id to mint.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function mint(address to, uint256 tokenId) public onlyMinter returns (bool) {\n        _mint(to, tokenId);\n        return true;\n    }\n\n    /**\n     * @dev Function to safely mint tokens.\n     * @param to The address that will receive the minted token.\n     * @param tokenId The token id to mint.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function safeMint(address to, uint256 tokenId) public onlyMinter returns (bool) {\n        _safeMint(to, tokenId);\n        return true;\n    }\n\n    /**\n     * @dev Function to safely mint tokens.\n     * @param to The address that will receive the minted token.\n     * @param tokenId The token id to mint.\n     * @param _data bytes data to send along with a safe transfer check.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function safeMint(address to, uint256 tokenId, bytes memory _data) public onlyMinter returns (bool) {\n        _safeMint(to, tokenId, _data);\n        return true;\n    }\n\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Mintable.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Mintable.sol",
    "exportedSymbols": {
      "ERC721Mintable": [
        2812
      ]
    },
    "id": 2813,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2718,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 2719,
        "nodeType": "ImportDirective",
        "scope": 2813,
        "sourceUnit": 3144,
        "src": "25:60:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2720,
        "nodeType": "ImportDirective",
        "scope": 2813,
        "sourceUnit": 2352,
        "src": "86:22:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 2721,
        "nodeType": "ImportDirective",
        "scope": 2813,
        "sourceUnit": 1032,
        "src": "109:43:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2722,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3143,
              "src": "244:13:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$3143",
                "typeString": "contract Initializable"
              }
            },
            "id": 2723,
            "nodeType": "InheritanceSpecifier",
            "src": "244:13:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2724,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2351,
              "src": "259:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2351",
                "typeString": "contract ERC721"
              }
            },
            "id": 2725,
            "nodeType": "InheritanceSpecifier",
            "src": "259:6:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2726,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1031,
              "src": "267:10:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$1031",
                "typeString": "contract MinterRole"
              }
            },
            "id": 2727,
            "nodeType": "InheritanceSpecifier",
            "src": "267:10:14"
          }
        ],
        "contractDependencies": [
          827,
          1031,
          1264,
          1274,
          2351,
          2918,
          3143
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721Mintable\n@dev ERC721 minting logic.",
        "fullyImplemented": true,
        "id": 2812,
        "linearizedBaseContracts": [
          2812,
          1031,
          2351,
          2918,
          1264,
          1274,
          827,
          3143
        ],
        "name": "ERC721Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2746,
              "nodeType": "Block",
              "src": "339:93:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2735,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2351,
                            "src": "357:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$2351_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 2736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1766,
                          "src": "357:26:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 2737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "357:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2734,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3161,
                        3162
                      ],
                      "referencedDeclaration": 3161,
                      "src": "349:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "349:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2739,
                  "nodeType": "ExpressionStatement",
                  "src": "349:37:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2743,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2729,
                        "src": "418:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2740,
                        "name": "MinterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1031,
                        "src": "396:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MinterRole_$1031_$",
                          "typeString": "type(contract MinterRole)"
                        }
                      },
                      "id": 2742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 948,
                      "src": "396:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "396:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2745,
                  "nodeType": "ExpressionStatement",
                  "src": "396:29:14"
                }
              ]
            },
            "documentation": null,
            "id": 2747,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2732,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2731,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3124,
                  "src": "327:11:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "327:11:14"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2729,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2747,
                  "src": "304:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "303:16:14"
            },
            "returnParameters": {
              "id": 2733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "339:0:14"
            },
            "scope": 2812,
            "src": "284:148:14",
            "stateMutability": "nonpayable",
            "superFunction": 948,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2765,
              "nodeType": "Block",
              "src": "749:56:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2759,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2749,
                        "src": "765:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2760,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2751,
                        "src": "769:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2758,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2171,
                      "src": "759:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "759:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2762,
                  "nodeType": "ExpressionStatement",
                  "src": "759:18:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "794:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2757,
                  "id": 2764,
                  "nodeType": "Return",
                  "src": "787:11:14"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens.\n@param to The address that will receive the minted token.\n@param tokenId The token id to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 2766,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2754,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2753,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 960,
                  "src": "723:10:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "723:10:14"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2749,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "687:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2751,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "699:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "686:29:14"
            },
            "returnParameters": {
              "id": 2757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2756,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "743:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2755,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "743:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "742:6:14"
            },
            "scope": 2812,
            "src": "673:132:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2784,
              "nodeType": "Block",
              "src": "1133:60:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2778,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2768,
                        "src": "1153:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2779,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2770,
                        "src": "1157:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2777,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2099,
                        2126
                      ],
                      "referencedDeclaration": 2099,
                      "src": "1143:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1143:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2781,
                  "nodeType": "ExpressionStatement",
                  "src": "1143:22:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1182:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2776,
                  "id": 2783,
                  "nodeType": "Return",
                  "src": "1175:11:14"
                }
              ]
            },
            "documentation": "@dev Function to safely mint tokens.\n@param to The address that will receive the minted token.\n@param tokenId The token id to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 2785,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2773,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2772,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 960,
                  "src": "1107:10:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1107:10:14"
              }
            ],
            "name": "safeMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2768,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2785,
                  "src": "1071:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2770,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2785,
                  "src": "1083:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1070:29:14"
            },
            "returnParameters": {
              "id": 2776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2775,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2785,
                  "src": "1127:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2774,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1126:6:14"
            },
            "scope": 2812,
            "src": "1053:140:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2806,
              "nodeType": "Block",
              "src": "1614:67:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2799,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2787,
                        "src": "1634:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2800,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2789,
                        "src": "1638:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2801,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2791,
                        "src": "1647:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2798,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2099,
                        2126
                      ],
                      "referencedDeclaration": 2126,
                      "src": "1624:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 2802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1624:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2803,
                  "nodeType": "ExpressionStatement",
                  "src": "1624:29:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1670:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2797,
                  "id": 2805,
                  "nodeType": "Return",
                  "src": "1663:11:14"
                }
              ]
            },
            "documentation": "@dev Function to safely mint tokens.\n@param to The address that will receive the minted token.\n@param tokenId The token id to mint.\n@param _data bytes data to send along with a safe transfer check.\n@return A boolean that indicates if the operation was successful.",
            "id": 2807,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2794,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2793,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 960,
                  "src": "1588:10:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1588:10:14"
              }
            ],
            "name": "safeMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2787,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2807,
                  "src": "1532:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1532:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2789,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2807,
                  "src": "1544:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1544:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2791,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2807,
                  "src": "1561:18:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2790,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1531:49:14"
            },
            "returnParameters": {
              "id": 2797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2796,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2807,
                  "src": "1608:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2795,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1608:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1607:6:14"
            },
            "scope": 2812,
            "src": "1514:167:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2811,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 2812,
            "src": "1687:29:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 2808,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1687:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2810,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 2809,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1695:2:14",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1687:11:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 2813,
        "src": "217:1502:14"
      }
    ],
    "src": "0:1720:14"
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Mintable.sol",
    "exportedSymbols": {
      "ERC721Mintable": [
        2812
      ]
    },
    "id": 2813,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2718,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 2719,
        "nodeType": "ImportDirective",
        "scope": 2813,
        "sourceUnit": 3144,
        "src": "25:60:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 2720,
        "nodeType": "ImportDirective",
        "scope": 2813,
        "sourceUnit": 2352,
        "src": "86:22:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 2721,
        "nodeType": "ImportDirective",
        "scope": 2813,
        "sourceUnit": 1032,
        "src": "109:43:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2722,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3143,
              "src": "244:13:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$3143",
                "typeString": "contract Initializable"
              }
            },
            "id": 2723,
            "nodeType": "InheritanceSpecifier",
            "src": "244:13:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2724,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2351,
              "src": "259:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$2351",
                "typeString": "contract ERC721"
              }
            },
            "id": 2725,
            "nodeType": "InheritanceSpecifier",
            "src": "259:6:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2726,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1031,
              "src": "267:10:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$1031",
                "typeString": "contract MinterRole"
              }
            },
            "id": 2727,
            "nodeType": "InheritanceSpecifier",
            "src": "267:10:14"
          }
        ],
        "contractDependencies": [
          827,
          1031,
          1264,
          1274,
          2351,
          2918,
          3143
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721Mintable\n@dev ERC721 minting logic.",
        "fullyImplemented": true,
        "id": 2812,
        "linearizedBaseContracts": [
          2812,
          1031,
          2351,
          2918,
          1264,
          1274,
          827,
          3143
        ],
        "name": "ERC721Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2746,
              "nodeType": "Block",
              "src": "339:93:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2735,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2351,
                            "src": "357:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$2351_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 2736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1766,
                          "src": "357:26:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 2737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "357:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2734,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3161,
                        3162
                      ],
                      "referencedDeclaration": 3161,
                      "src": "349:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "349:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2739,
                  "nodeType": "ExpressionStatement",
                  "src": "349:37:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2743,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2729,
                        "src": "418:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2740,
                        "name": "MinterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1031,
                        "src": "396:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MinterRole_$1031_$",
                          "typeString": "type(contract MinterRole)"
                        }
                      },
                      "id": 2742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 948,
                      "src": "396:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "396:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2745,
                  "nodeType": "ExpressionStatement",
                  "src": "396:29:14"
                }
              ]
            },
            "documentation": null,
            "id": 2747,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2732,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2731,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3124,
                  "src": "327:11:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "327:11:14"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2729,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2747,
                  "src": "304:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "303:16:14"
            },
            "returnParameters": {
              "id": 2733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "339:0:14"
            },
            "scope": 2812,
            "src": "284:148:14",
            "stateMutability": "nonpayable",
            "superFunction": 948,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2765,
              "nodeType": "Block",
              "src": "749:56:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2759,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2749,
                        "src": "765:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2760,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2751,
                        "src": "769:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2758,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2171,
                      "src": "759:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "759:18:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2762,
                  "nodeType": "ExpressionStatement",
                  "src": "759:18:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "794:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2757,
                  "id": 2764,
                  "nodeType": "Return",
                  "src": "787:11:14"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens.\n@param to The address that will receive the minted token.\n@param tokenId The token id to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 2766,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2754,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2753,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 960,
                  "src": "723:10:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "723:10:14"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2749,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "687:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2751,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "699:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "686:29:14"
            },
            "returnParameters": {
              "id": 2757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2756,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "743:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2755,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "743:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "742:6:14"
            },
            "scope": 2812,
            "src": "673:132:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2784,
              "nodeType": "Block",
              "src": "1133:60:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2778,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2768,
                        "src": "1153:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2779,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2770,
                        "src": "1157:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2777,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2099,
                        2126
                      ],
                      "referencedDeclaration": 2099,
                      "src": "1143:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1143:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2781,
                  "nodeType": "ExpressionStatement",
                  "src": "1143:22:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1182:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2776,
                  "id": 2783,
                  "nodeType": "Return",
                  "src": "1175:11:14"
                }
              ]
            },
            "documentation": "@dev Function to safely mint tokens.\n@param to The address that will receive the minted token.\n@param tokenId The token id to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 2785,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2773,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2772,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 960,
                  "src": "1107:10:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1107:10:14"
              }
            ],
            "name": "safeMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2768,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2785,
                  "src": "1071:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2770,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2785,
                  "src": "1083:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1070:29:14"
            },
            "returnParameters": {
              "id": 2776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2775,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2785,
                  "src": "1127:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2774,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1126:6:14"
            },
            "scope": 2812,
            "src": "1053:140:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2806,
              "nodeType": "Block",
              "src": "1614:67:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2799,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2787,
                        "src": "1634:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2800,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2789,
                        "src": "1638:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2801,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2791,
                        "src": "1647:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2798,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2099,
                        2126
                      ],
                      "referencedDeclaration": 2126,
                      "src": "1624:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 2802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1624:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2803,
                  "nodeType": "ExpressionStatement",
                  "src": "1624:29:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1670:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2797,
                  "id": 2805,
                  "nodeType": "Return",
                  "src": "1663:11:14"
                }
              ]
            },
            "documentation": "@dev Function to safely mint tokens.\n@param to The address that will receive the minted token.\n@param tokenId The token id to mint.\n@param _data bytes data to send along with a safe transfer check.\n@return A boolean that indicates if the operation was successful.",
            "id": 2807,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2794,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2793,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 960,
                  "src": "1588:10:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1588:10:14"
              }
            ],
            "name": "safeMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2787,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2807,
                  "src": "1532:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1532:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2789,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2807,
                  "src": "1544:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1544:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2791,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2807,
                  "src": "1561:18:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2790,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1531:49:14"
            },
            "returnParameters": {
              "id": 2797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2796,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2807,
                  "src": "1608:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2795,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1608:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1607:6:14"
            },
            "scope": 2812,
            "src": "1514:167:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2811,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 2812,
            "src": "1687:29:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 2808,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1687:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 2810,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 2809,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1695:2:14",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1687:11:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 2813,
        "src": "217:1502:14"
      }
    ],
    "src": "0:1720:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2020-01-26T15:07:41.996Z",
  "devdoc": {
    "details": "ERC721 minting logic.",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens.",
        "params": {
          "to": "The address that will receive the minted token.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeMint(address,uint256)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "to": "The address that will receive the minted token.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "safeMint(address,uint256,bytes)": {
        "details": "Function to safely mint tokens.",
        "params": {
          "_data": "bytes data to send along with a safe transfer check.",
          "to": "The address that will receive the minted token.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "ERC721Mintable"
  },
  "userdoc": {
    "methods": {}
  }
}